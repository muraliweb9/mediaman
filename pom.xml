<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>me.synology.murali</groupId>
	<version>0.1.trunk-SNAPSHOT</version>
	<name>mediaman</name>
	<dependencies>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.2.5</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.2.5</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.mp4parser</groupId>
			<artifactId>isoparser</artifactId>
			<version>1.0-RC-37</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>4.1.4.RELEASE</version>
			<!-- exclusions> <exclusion> <groupId>commons-logging</groupId> <artifactId>commons-logging</artifactId> 
				</exclusion> </exclusions -->
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>4.1.4.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>4.1.4.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>4.1.4.RELEASE</version>
		</dependency>
		
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.7.1</version>
		</dependency>
 
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.4</version>
		</dependency>
		<!--dependency>
    		<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2</version>
    	</dependency-->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.5</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-core</artifactId>
			<version>1.5.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.5.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.5.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-easymock</artifactId>
			<version>1.5.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.perf4j</groupId>
			<artifactId>perf4j</artifactId>
			<version>0.9.16</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>xjc</id>
						<goals>
							<goal>xjc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<schemaDirectory>${project.basedir}/src/main/config/xsd</schemaDirectory>
					<outputDirectory>${project.build.directory}/generated-sources</outputDirectory>
					<packageName>com.murali.nas.model.xml.itunes</packageName>
				</configuration>
			</plugin>
			<!--plugin> <groupId>com.googlecode.maven-java-formatter-plugin</groupId> 
				<artifactId>maven-java-formatter-plugin</artifactId> <version>0.4</version> 
				<executions> <execution> <goals> <goal>format</goal> </goals> </execution> 
				</executions> <configuration> <configFile>${basedir}/src/main/config/codecheck/code-formatter.xml</configFile> 
				</configuration> </plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.13</version>
				<dependencies>
	                <dependency>
	                    <groupId>com.puppycrawl.tools</groupId>
	                    <artifactId>checkstyle</artifactId>
	                    <version>6.1.1</version>
	                </dependency>
            	</dependencies>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<configuration>
							<propertyExpansion>basedir=${basedir}</propertyExpansion>
							<configLocation>${basedir}/src/main/config/codecheck/checkstyle.xml</configLocation>

							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<linkXRef>false</linkXRef>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerArgument>-parameters</compilerArgument>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>META-INF/lib/</classpathPrefix>
							<mainClass>com.murali.nas.MediaManager</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/classes/META-INF/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>install</phase>
						<configuration>

							<tasks>
								<echo message="Application deployment directory" />
								<mkdir dir="./target/media_prep" />
								<mkdir dir="./target/media_prep/input" />
								<mkdir dir="./target/media_prep/output" />
								<mkdir dir="./target/media_prep/config" />
								<mkdir dir="./target/media_prep/lib" />
								<mkdir dir="./target/media_prep/work" />
								<copy todir="./target/media_prep">
									<fileset dir="./src/main/config/bin">
										<include name="*.sh" />
									</fileset>
								</copy>
								<chmod file="./target/media_prep/*.sh" perm="777" />
								<chmod file="./target/media_prep/work/*.sh" perm="777" />

								<copy todir="./target/media_prep/config">
									<fileset dir="./src/main/config/properties">
										<include name="*.*" />
									</fileset>
								</copy>
								<copy todir="./target/media_prep/lib">
									<fileset dir="./target">
										<include name="*.jar" />
									</fileset>
								</copy>
								<copy todir="./target/media_prep/lib">
									<fileset dir="./target/classes">
										<include name="**/*" />
									</fileset>
								</copy>
							</tasks>

						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<!--execution> <id>combined-jar</id> <phase>package</phase> <goals> 
						<goal>single</goal> </goals> <configuration> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> 
						</descriptorRefs> </configuration> </execution -->
					<execution>
						<id>install-dir</id>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>${basedir}/src/main/config/codecheck/assembly.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Jacoco coverage reports -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.4.201502262128</version>
				<executions>
<!-- 					Prepares the property pointing to the JaCoCo runtime agent which -->
<!-- 						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
<!-- 							Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
<!-- 							Sets the name of the property containing the settings for JaCoCo  -->
<!-- 								runtime agent.  -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
<!-- 					Ensures that the code coverage report for unit tests is created  -->
<!-- 						after unit tests have been run.  -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
<!-- 							Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
<!-- 							Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			
			
			

		    <plugin>  
		        <groupId>org.codehaus.mojo</groupId>  
		        <artifactId>cobertura-maven-plugin</artifactId>  
		        <version>2.6</version>  
		        <dependencies>  
		            <dependency>  
		                <groupId>org.ow2.asm</groupId>  
		                <artifactId>asm</artifactId>  
		                <version>5.0.3</version>  
		            </dependency>  
		        </dependencies>  
		    </plugin>  
		</plugins>
	</build>
	<pluginRepositories>
		<pluginRepository>
			<id>onejar.repo</id>
			<url>http://onejar-maven-plugin.googlecode.com/svn/mavenrepo</url>
		</pluginRepository>
	</pluginRepositories>
	<artifactId>mediaman</artifactId>
	
	<!-- Cobertura code coverage -->
	<reporting>
	    <plugins>
		    <plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>cobertura-maven-plugin</artifactId>
			    <version>2.6</version>
		    </plugin>
	    </plugins>
  </reporting>
</project>
